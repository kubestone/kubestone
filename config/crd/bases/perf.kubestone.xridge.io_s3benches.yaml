
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: s3benches.perf.kubestone.xridge.io
spec:
  group: perf.kubestone.xridge.io
  names:
    kind: S3Bench
    plural: s3benches
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    additionalPrinterColumns:
    - jsonPath: .status.running
      name: Running
      type: boolean
    - jsonPath: .status.completed
      name: Completed
      type: boolean
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        description: S3Bench is the Schema for the s3benches API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: S3BenchSpec defines the desired state of S3Bench
            properties:
              accessKey:
                type: string
              analysis:
                description: S3AnalysisOptions defines options for the analysis features
                  of warp
                properties:
                  duration:
                    description: 'Duration defines the time length to split analysis
                      into durations of this length (default: "1s")'
                    type: string
                  hostDetails:
                    description: 'HostDetails Do detailed time segmentation per host
                      (default: false)'
                    type: boolean
                  hostFilter:
                    description: HostFilter Only output for this host.
                    type: string
                  operationFilter:
                    description: OperationFilter Only output for this op. Can be GET/PUT/DELETE,
                      etc.
                    type: string
                  output:
                    description: Output aggregated data as to file
                    type: string
                  printErrors:
                    description: 'PrintErrors Print out errors (default: false)'
                    type: boolean
                  skip:
                    description: 'Skip Additional duration to skip when analyzing data.
                      (default: 0s)'
                    type: string
                type: object
              autoTerm:
                description: S3AutoTermOptions defines options for the auto terminate
                  feature of warp.
                properties:
                  duration:
                    description: 'Duration defines the minimum duration where output
                      must have been stable to allow automatic termination. (default:
                      10s)'
                    type: string
                  enabled:
                    description: 'Enabled defines if to auto terminate when benchmark
                      is considered stable. (default: false)'
                    type: boolean
                  percent:
                    description: 'Percent defines the percentage the last 6/25 time
                      blocks must be within current speed to auto terminate. (default:
                      7.5)'
                    type: string
                type: object
              benchOutput:
                description: Output benchmark+profile data to this file. By default
                  unique filename is generated.
                type: string
              bucket:
                description: 'Bucket defines which bucket to use for benchmark data.
                  ALL DATA WILL BE DELETED IN BUCKET! (default: "warp-benchmark-bucket")'
                type: string
              concurrent:
                description: 'Concurrent defines how many concurrent operations to run
                  (default: 6)'
                format: int32
                type: integer
              debug:
                description: 'Debug will enable debug output (default: false)'
                type: boolean
              duration:
                description: 'Duration defines the time length to run the benchmark.
                  Use ''s'' and ''m'' to specify seconds and minutes. (default: 5m0s)'
                type: string
              encrypt:
                description: 'Encrypt defines if to encrypt/decrypt objects (using server-side
                  encryption with random keys) (default: false)'
                type: boolean
              host:
                description: 'Host defines the host to benchmark against. Multiple hosts
                  can be specified as a comma separated list. (default: "127.0.0.1:9000")'
                type: string
              hostSelect:
                description: 'HostSelect defines the host selection algorithm. Can be
                  "weighed" or "roundrobin" (default: "weighed")'
                type: string
              image:
                description: Image defines the warp docker image used for the benchmark
                properties:
                  name:
                    description: Name is the Docker Image location including the tag
                    type: string
                  pullPolicy:
                    description: PullPolicy controls how the docker images are downloaded
                      Defaults to Always if :latest tag is specified, or IfNotPresent
                      otherwise.
                    enum:
                    - Always
                    - Never
                    - IfNotPresent
                    type: string
                  pullSecret:
                    description: PullSecret is an optional list of references to secrets
                      in the same namespace to use for pulling any of the images
                    type: string
                required:
                - name
                type: object
              insecure:
                description: 'Insecure defines if to disable SSL certificate verification
                  (default: false)'
                type: boolean
              mixedDist:
                description: MixedDistributionOptions defines the distribution of operation
                  types if using the mixed mode Will only be used in "mixed" mode.
                properties:
                  delete:
                    description: 'DeleteDist The amount of DELETE operations. Must be
                      at least the same as PUT. (default: 10)'
                    format: int32
                    type: integer
                  get:
                    description: 'GetDist The amount of GET operations. (default: 45)'
                    format: int32
                    type: integer
                  put:
                    description: 'PutDist The amount of PUT operations. (default: 15)'
                    format: int32
                    type: integer
                  stat:
                    description: 'StatDist The amount of STAT operations. (default:
                      30)'
                    format: int32
                    type: integer
                type: object
              mode:
                description: 'Mode defines the operating mode of the benchmark test.
                  See https://github.com/minio/warp#mixed for option definition. Currently
                  accepted values are: get, put, delete, mixed'
                type: string
              noClear:
                description: 'NoClear Do not clear bucket before or after running benchmarks.
                  Use when running multiple clients. (default: false)'
                type: boolean
              noColor:
                description: 'NoColor will disable color theme (default: false)'
                type: boolean
              noPrefix:
                description: 'NoPrefix defines if to NOT use separate prefix for each
                  thread (default: false)'
                type: boolean
              objects:
                description: S3ObjectOptions defines options for the objects generated
                  by the benchmark
                properties:
                  count:
                    description: 'Count defines the number of objects to upload. (default:
                      2500)'
                    format: int32
                    type: integer
                  generator:
                    description: 'Generator defines if to use a specific data generator
                      (default: "random")'
                    type: string
                  randomSize:
                    description: 'RandomSize defines if to randomize size of objects
                      so they will be up to the specified size (default: false)'
                    type: boolean
                  size:
                    description: 'Size defines the size of each generated object. Can
                      be a number or 10KiB/MiB/GiB. All sizes are base 2 binary. (default:
                      "10MiB")'
                    type: string
                type: object
              podConfig:
                description: PodConfig contains the configuration for the benchmark
                  pod, including pod labels and scheduling policies (affinity, toleration,
                  node selector...)
                properties:
                  annotations:
                    additionalProperties:
                      type: string
                    description: 'Annotations is an unstructured key value map stored
                      with a resource that may be set by external tools to store and
                      retrieve arbitrary metadata. They are not queryable and should
                      be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                    type: object
                  podLabels:
                    additionalProperties:
                      type: string
                    description: PodLabels are added to the pod as labels.
                    type: object
                  podScheduling:
                    description: PodScheduling contains options to determine which node
                      the pod should be scheduled on
                    properties:
                      affinity:
                        description: Affinity is a group of affinity scheduling rules.
                        properties:
                          nodeAffinity:
                            description: Describes node affinity scheduling rules for
                              the pod.
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: The scheduler will prefer to schedule pods
                                  to nodes that satisfy the affinity expressions specified
                                  by this field, but it may choose a node that violates
                                  one or more of the expressions. The node that is most
                                  preferred is the one with the greatest sum of weights,
                                  i.e. for each node that meets all of the scheduling
                                  requirements (resource request, requiredDuringScheduling
                                  affinity expressions, etc.), compute a sum by iterating
                                  through the elements of this field and adding "weight"
                                  to the sum if the node matches the corresponding matchExpressions;
                                  the node(s) with the highest sum are the most preferred.
                                items:
                                  description: An empty preferred scheduling term matches
                                    all objects with implicit weight 0 (i.e. it's a
                                    no-op). A null preferred scheduling term matches
                                    no objects (i.e. is also a no-op).
                                  properties:
                                    preference:
                                      description: A node selector term, associated
                                        with the corresponding weight.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements
                                            by node's labels.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values, a
                                              key, and an operator that relates the
                                              key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn, the
                                                  values array must be non-empty. If
                                                  the operator is Exists or DoesNotExist,
                                                  the values array must be empty. If
                                                  the operator is Gt or Lt, the values
                                                  array must have a single element,
                                                  which will be interpreted as an integer.
                                                  This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchFields:
                                          description: A list of node selector requirements
                                            by node's fields.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values, a
                                              key, and an operator that relates the
                                              key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn, the
                                                  values array must be non-empty. If
                                                  the operator is Exists or DoesNotExist,
                                                  the values array must be empty. If
                                                  the operator is Gt or Lt, the values
                                                  array must have a single element,
                                                  which will be interpreted as an integer.
                                                  This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                      type: object
                                    weight:
                                      description: Weight associated with matching the
                                        corresponding nodeSelectorTerm, in the range
                                        1-100.
                                      format: int32
                                      type: integer
                                  required:
                                  - preference
                                  - weight
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: If the affinity requirements specified
                                  by this field are not met at scheduling time, the
                                  pod will not be scheduled onto the node. If the affinity
                                  requirements specified by this field cease to be met
                                  at some point during pod execution (e.g. due to an
                                  update), the system may or may not try to eventually
                                  evict the pod from its node.
                                properties:
                                  nodeSelectorTerms:
                                    description: Required. A list of node selector terms.
                                      The terms are ORed.
                                    items:
                                      description: A null or empty node selector term
                                        matches no objects. The requirements of them
                                        are ANDed. The TopologySelectorTerm type implements
                                        a subset of the NodeSelectorTerm.
                                      properties:
                                        matchExpressions:
                                          description: A list of node selector requirements
                                            by node's labels.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values, a
                                              key, and an operator that relates the
                                              key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn, the
                                                  values array must be non-empty. If
                                                  the operator is Exists or DoesNotExist,
                                                  the values array must be empty. If
                                                  the operator is Gt or Lt, the values
                                                  array must have a single element,
                                                  which will be interpreted as an integer.
                                                  This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchFields:
                                          description: A list of node selector requirements
                                            by node's fields.
                                          items:
                                            description: A node selector requirement
                                              is a selector that contains values, a
                                              key, and an operator that relates the
                                              key and values.
                                            properties:
                                              key:
                                                description: The label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: Represents a key's relationship
                                                  to a set of values. Valid operators
                                                  are In, NotIn, Exists, DoesNotExist.
                                                  Gt, and Lt.
                                                type: string
                                              values:
                                                description: An array of string values.
                                                  If the operator is In or NotIn, the
                                                  values array must be non-empty. If
                                                  the operator is Exists or DoesNotExist,
                                                  the values array must be empty. If
                                                  the operator is Gt or Lt, the values
                                                  array must have a single element,
                                                  which will be interpreted as an integer.
                                                  This array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                required:
                                - nodeSelectorTerms
                                type: object
                            type: object
                          podAffinity:
                            description: Describes pod affinity scheduling rules (e.g.
                              co-locate this pod in the same node, zone, etc. as some
                              other pod(s)).
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: The scheduler will prefer to schedule pods
                                  to nodes that satisfy the affinity expressions specified
                                  by this field, but it may choose a node that violates
                                  one or more of the expressions. The node that is most
                                  preferred is the one with the greatest sum of weights,
                                  i.e. for each node that meets all of the scheduling
                                  requirements (resource request, requiredDuringScheduling
                                  affinity expressions, etc.), compute a sum by iterating
                                  through the elements of this field and adding "weight"
                                  to the sum if the node has pods which matches the
                                  corresponding podAffinityTerm; the node(s) with the
                                  highest sum are the most preferred.
                                items:
                                  description: The weights of all of the matched WeightedPodAffinityTerm
                                    fields are added per-node to find the most preferred
                                    node(s)
                                  properties:
                                    podAffinityTerm:
                                      description: Required. A pod affinity term, associated
                                        with the corresponding weight.
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of resources,
                                            in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key
                                                      that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value}
                                                pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies which namespaces
                                            the labelSelector applies to (matches against);
                                            null or empty list means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose value
                                            of the label with key topologyKey matches
                                            that of any node on which any of the selected
                                            pods is running. Empty topologyKey is not
                                            allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    weight:
                                      description: weight associated with matching the
                                        corresponding podAffinityTerm, in the range
                                        1-100.
                                      format: int32
                                      type: integer
                                  required:
                                  - podAffinityTerm
                                  - weight
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: If the affinity requirements specified
                                  by this field are not met at scheduling time, the
                                  pod will not be scheduled onto the node. If the affinity
                                  requirements specified by this field cease to be met
                                  at some point during pod execution (e.g. due to a
                                  pod label update), the system may or may not try to
                                  eventually evict the pod from its node. When there
                                  are multiple elements, the lists of nodes corresponding
                                  to each podAffinityTerm are intersected, i.e. all
                                  terms must be satisfied.
                                items:
                                  description: Defines a set of pods (namely those matching
                                    the labelSelector relative to the given namespace(s))
                                    that this pod should be co-located (affinity) or
                                    not co-located (anti-affinity) with, where co-located
                                    is defined as running on a node whose value of the
                                    label with key <topologyKey> matches that of any
                                    node on which a pod of the set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of
                                            label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values, a
                                              key, and an operator that relates the
                                              key and values.
                                            properties:
                                              key:
                                                description: key is the label key that
                                                  the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's
                                                  relationship to a set of values. Valid
                                                  operators are In, NotIn, Exists and
                                                  DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string
                                                  values. If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This
                                                  array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator is
                                            "In", and the values array contains only
                                            "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the pods
                                        matching the labelSelector in the specified
                                        namespaces, where co-located is defined as running
                                        on a node whose value of the label with key
                                        topologyKey matches that of any node on which
                                        any of the selected pods is running. Empty topologyKey
                                        is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                type: array
                            type: object
                          podAntiAffinity:
                            description: Describes pod anti-affinity scheduling rules
                              (e.g. avoid putting this pod in the same node, zone, etc.
                              as some other pod(s)).
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                description: The scheduler will prefer to schedule pods
                                  to nodes that satisfy the anti-affinity expressions
                                  specified by this field, but it may choose a node
                                  that violates one or more of the expressions. The
                                  node that is most preferred is the one with the greatest
                                  sum of weights, i.e. for each node that meets all
                                  of the scheduling requirements (resource request,
                                  requiredDuringScheduling anti-affinity expressions,
                                  etc.), compute a sum by iterating through the elements
                                  of this field and adding "weight" to the sum if the
                                  node has pods which matches the corresponding podAffinityTerm;
                                  the node(s) with the highest sum are the most preferred.
                                items:
                                  description: The weights of all of the matched WeightedPodAffinityTerm
                                    fields are added per-node to find the most preferred
                                    node(s)
                                  properties:
                                    podAffinityTerm:
                                      description: Required. A pod affinity term, associated
                                        with the corresponding weight.
                                      properties:
                                        labelSelector:
                                          description: A label query over a set of resources,
                                            in this case pods.
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list
                                                of label selector requirements. The
                                                requirements are ANDed.
                                              items:
                                                description: A label selector requirement
                                                  is a selector that contains values,
                                                  a key, and an operator that relates
                                                  the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key
                                                      that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents
                                                      a key's relationship to a set
                                                      of values. Valid operators are
                                                      In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array
                                                      of string values. If the operator
                                                      is In or NotIn, the values array
                                                      must be non-empty. If the operator
                                                      is Exists or DoesNotExist, the
                                                      values array must be empty. This
                                                      array is replaced during a strategic
                                                      merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                - key
                                                - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value}
                                                pairs. A single {key,value} in the matchLabels
                                                map is equivalent to an element of matchExpressions,
                                                whose key field is "key", the operator
                                                is "In", and the values array contains
                                                only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                        namespaces:
                                          description: namespaces specifies which namespaces
                                            the labelSelector applies to (matches against);
                                            null or empty list means "this pod's namespace"
                                          items:
                                            type: string
                                          type: array
                                        topologyKey:
                                          description: This pod should be co-located
                                            (affinity) or not co-located (anti-affinity)
                                            with the pods matching the labelSelector
                                            in the specified namespaces, where co-located
                                            is defined as running on a node whose value
                                            of the label with key topologyKey matches
                                            that of any node on which any of the selected
                                            pods is running. Empty topologyKey is not
                                            allowed.
                                          type: string
                                      required:
                                      - topologyKey
                                      type: object
                                    weight:
                                      description: weight associated with matching the
                                        corresponding podAffinityTerm, in the range
                                        1-100.
                                      format: int32
                                      type: integer
                                  required:
                                  - podAffinityTerm
                                  - weight
                                  type: object
                                type: array
                              requiredDuringSchedulingIgnoredDuringExecution:
                                description: If the anti-affinity requirements specified
                                  by this field are not met at scheduling time, the
                                  pod will not be scheduled onto the node. If the anti-affinity
                                  requirements specified by this field cease to be met
                                  at some point during pod execution (e.g. due to a
                                  pod label update), the system may or may not try to
                                  eventually evict the pod from its node. When there
                                  are multiple elements, the lists of nodes corresponding
                                  to each podAffinityTerm are intersected, i.e. all
                                  terms must be satisfied.
                                items:
                                  description: Defines a set of pods (namely those matching
                                    the labelSelector relative to the given namespace(s))
                                    that this pod should be co-located (affinity) or
                                    not co-located (anti-affinity) with, where co-located
                                    is defined as running on a node whose value of the
                                    label with key <topologyKey> matches that of any
                                    node on which a pod of the set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label query over a set of resources,
                                        in this case pods.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of
                                            label selector requirements. The requirements
                                            are ANDed.
                                          items:
                                            description: A label selector requirement
                                              is a selector that contains values, a
                                              key, and an operator that relates the
                                              key and values.
                                            properties:
                                              key:
                                                description: key is the label key that
                                                  the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's
                                                  relationship to a set of values. Valid
                                                  operators are In, NotIn, Exists and
                                                  DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string
                                                  values. If the operator is In or NotIn,
                                                  the values array must be non-empty.
                                                  If the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This
                                                  array is replaced during a strategic
                                                  merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator is
                                            "In", and the values array contains only
                                            "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the pods
                                        matching the labelSelector in the specified
                                        namespaces, where co-located is defined as running
                                        on a node whose value of the label with key
                                        topologyKey matches that of any node on which
                                        any of the selected pods is running. Empty topologyKey
                                        is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                  type: object
                                type: array
                            type: object
                        type: object
                      nodeName:
                        description: NodeName is a request to schedule this pod onto
                          a specific node. If it is non-empty, the scheduler simply
                          schedules this pod onto that node, assuming that it fits resource
                          requirements.
                        type: string
                      nodeSelector:
                        additionalProperties:
                          type: string
                        description: A node selector represents the union of the results
                          of one or more label queries over a set of nodes; that is,
                          it represents the OR of the selectors represented by the node
                          selector terms.
                        type: object
                      tolerations:
                        description: If specified, the pod's tolerations.
                        items:
                          description: The pod this Toleration is attached to tolerates
                            any taint that matches the triple <key,value,effect> using
                            the matching operator <operator>.
                          properties:
                            effect:
                              description: Effect indicates the taint effect to match.
                                Empty means match all taint effects. When specified,
                                allowed values are NoSchedule, PreferNoSchedule and
                                NoExecute.
                              type: string
                            key:
                              description: Key is the taint key that the toleration
                                applies to. Empty means match all taint keys. If the
                                key is empty, operator must be Exists; this combination
                                means to match all values and all keys.
                              type: string
                            operator:
                              description: Operator represents a key's relationship
                                to the value. Valid operators are Exists and Equal.
                                Defaults to Equal. Exists is equivalent to wildcard
                                for value, so that a pod can tolerate all taints of
                                a particular category.
                              type: string
                            tolerationSeconds:
                              description: TolerationSeconds represents the period of
                                time the toleration (which must be of effect NoExecute,
                                otherwise this field is ignored) tolerates the taint.
                                By default, it is not set, which means tolerate the
                                taint forever (do not evict). Zero and negative values
                                will be treated as 0 (evict immediately) by the system.
                              format: int64
                              type: integer
                            value:
                              description: Value is the taint value the toleration matches
                                to. If the operator is Exists, the value should be empty,
                                otherwise just a regular string.
                              type: string
                          type: object
                        type: array
                    type: object
                  resources:
                    description: 'Resources required by the benchmark pod container
                      More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                    properties:
                      limits:
                        additionalProperties:
                          type: string
                        description: 'Limits describes the maximum amount of compute
                          resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        additionalProperties:
                          type: string
                        description: 'Requests describes the minimum amount of compute
                          resources required. If Requests is omitted for a container,
                          it defaults to Limits if that is explicitly specified, otherwise
                          to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                    type: object
                type: object
              region:
                description: Region defines a custom region
                type: string
              requests:
                description: Requests Display individual request stats.
                type: boolean
              secretKey:
                type: string
              syncStart:
                description: Specify a benchmark start time. Time format is 'hh:mm'
                  where hours are specified in 24h format, server TZ.
                type: string
              tls:
                description: 'Tls defines if to use TLS (HTTPS) for transport (default:
                  false)'
                type: boolean
            required:
            - host
            - mode
            type: object
          status:
            description: BenchmarkStatus describes the current state of the benchmark
            properties:
              completed:
                description: Completed shows the state of completion
                type: boolean
              running:
                description: Running shows the state of execution
                type: boolean
            required:
            - completed
            - running
            type: object
        type: object
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
